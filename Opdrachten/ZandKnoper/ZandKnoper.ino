/*   09/11/2020
 *   FabZero project bij Ingegno Makerspace Drongen.
 *   
 * Arduino Nano Every ZandKnoper 
 *         Eerste versie met Oled, Ballswitch en Passive Buzzer. 
 *         Toevoeging van 1 knop met 4 functies.
 *         Opheffing ballswitch.
 *         Toevoeging Hg Contact voor kantelen ZandKnoper
 *         
 * By Xiao Shi Zi Yi 小獅子一
 * 
 * ZandTijd Timer instellen met drukknop KeuzeScherm Next• Select—
 * 
 * Geluid door Buzzer aangesloten op pin ~D3(pin6 van het board) 
 * 
 * Drukknop aangesloten op pin D4 (pin7)
 * 
 * HgSwitch aangesloten op pin D5 (pin8) (Nog te testen en toe te voegen)
 * 
 * Library: Oled 6 pins 2 colours, SPI, u8g2 by Oliver 
 * 
 * Pins on the Nano Every
 * 
 * Library U8G2 voor OLED
 * 
 */
#include <Arduino.h>
#include <U8g2lib.h>
#include <SPI.h>

U8G2_SSD1306_128X64_NONAME_F_4W_HW_SPI u8g2(U8G2_R3, /* cs=*/ 13, /* dc=*/ 9, /* reset=*/ 8); // R1 of R3 in gebruik. Veranderen door SetFlipmode 0 of 1

// Copy the contents of your .xbm file below
#define zand_width 62
#define zand_height 126
static unsigned char zand_bits[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0x00, 0x00,
   0x00, 0x00, 0x7c, 0x00, 0x00, 0x80, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00,
   0x00, 0x00, 0x38, 0x00, 0x00, 0xe0, 0x81, 0x80, 0x14, 0x80, 0xff, 0x00,
   0x00, 0x38, 0x80, 0x00, 0x95, 0x0f, 0x40, 0x03, 0x00, 0x0e, 0x80, 0x00,
   0x3a, 0x02, 0x20, 0x06, 0x80, 0x03, 0x80, 0x00, 0x2b, 0x02, 0x10, 0x08,
   0xc0, 0x00, 0x88, 0x88, 0xaa, 0x0f, 0x08, 0x10, 0x60, 0x00, 0x88, 0x10,
   0xba, 0x0a, 0x08, 0x10, 0x20, 0x00, 0x84, 0x10, 0x8a, 0xea, 0xff, 0x13,
   0x20, 0x00, 0x84, 0x20, 0xbb, 0x0a, 0x08, 0x10, 0x60, 0x00, 0x82, 0xa0,
   0xaa, 0x0a, 0x08, 0x18, 0xe0, 0x00, 0x80, 0x00, 0xaa, 0x0a, 0x08, 0x18,
   0xc0, 0x07, 0x80, 0x00, 0xaa, 0x0e, 0x08, 0x1c, 0xe0, 0x3d, 0x80, 0x00,
   0x3a, 0x02, 0x08, 0x1f, 0x20, 0xe7, 0xe0, 0x80, 0x01, 0x02, 0xce, 0x17,
   0x20, 0x9c, 0x0f, 0x00, 0x00, 0x00, 0x30, 0x12, 0x20, 0x70, 0xf8, 0xff,
   0x7f, 0x00, 0x1e, 0x13, 0x20, 0xd0, 0x03, 0x00, 0xc0, 0xff, 0xc3, 0x11,
   0x20, 0x10, 0x7c, 0x00, 0x00, 0x00, 0xf0, 0x10, 0x60, 0x10, 0xc0, 0xff,
   0xf0, 0xff, 0x9f, 0x10, 0x40, 0x20, 0x00, 0x80, 0x1f, 0x00, 0x80, 0x10,
   0x40, 0x60, 0x00, 0x00, 0x00, 0x00, 0x80, 0x10, 0xc0, 0x40, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x10, 0x80, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x80, 0x18,
   0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x81, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x09, 0x00, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x09,
   0x00, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x02, 0x01, 0x00,
   0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x01, 0x00, 0x00, 0x00, 0x00, 0x07,
   0x00, 0x04, 0x03, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x02, 0x00,
   0x00, 0x00, 0x00, 0x06, 0x00, 0x0c, 0x06, 0x00, 0x00, 0x00, 0x00, 0x05,
   0x00, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x18, 0x0c, 0x00,
   0x00, 0x00, 0x80, 0x03, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x80, 0x02,
   0x00, 0x30, 0x18, 0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x20, 0x30, 0x00,
   0x00, 0x00, 0x60, 0x02, 0x00, 0x60, 0x20, 0x00, 0x00, 0x00, 0x20, 0x02,
   0x00, 0x40, 0x60, 0x00, 0x00, 0x00, 0x30, 0x03, 0x00, 0x80, 0x40, 0x00,
   0x00, 0x00, 0x10, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x00, 0x18, 0x01,
   0x00, 0x00, 0x03, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x02, 0x06,
   0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x00, 0x00, 0x82, 0x00,
   0x00, 0x00, 0x0c, 0x08, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x08, 0x10,
   0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x10, 0x60, 0x00, 0x80, 0x61, 0x00,
   0x00, 0x00, 0x70, 0xc0, 0x00, 0x80, 0x20, 0x00, 0x00, 0x00, 0xc0, 0x80,
   0x00, 0x40, 0x30, 0x00, 0x00, 0x00, 0x80, 0x00, 0x03, 0x60, 0x10, 0x00,
   0x00, 0x00, 0x00, 0x03, 0x02, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x02,
   0x0c, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x06, 0x08, 0x18, 0x04, 0x00,
   0x00, 0x00, 0x00, 0x04, 0x18, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x08,
   0x30, 0x04, 0x03, 0x00, 0x00, 0x00, 0x00, 0x18, 0x60, 0x86, 0x01, 0x00,
   0x00, 0x00, 0x00, 0x10, 0x40, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
   0x80, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x30, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x80, 0xe3, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x36, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x07, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x86, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
   0xe1, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x18, 0x10, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x60, 0x2e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4,
   0x43, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x80, 0xc0, 0x00, 0x00,
   0x00, 0x00, 0xc0, 0x39, 0x00, 0x83, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0e,
   0x00, 0x82, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x04, 0x01, 0x00,
   0x00, 0x00, 0xc3, 0x01, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x80, 0x78, 0x00,
   0x00, 0x08, 0x02, 0x00, 0x00, 0x60, 0x0e, 0x00, 0x00, 0x10, 0x02, 0x00,
   0x00, 0xb0, 0x01, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0xdc, 0x00, 0x00,
   0x00, 0x60, 0x04, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x40, 0x08, 0x00,
   0x00, 0x33, 0x00, 0x00, 0x00, 0xc0, 0x08, 0x00, 0x80, 0x10, 0x00, 0x00,
   0x00, 0x80, 0x18, 0x00, 0x80, 0x08, 0x00, 0x00, 0x00, 0x80, 0x11, 0x00,
   0xc0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x40, 0x0c, 0x00, 0x00,
   0x00, 0x00, 0x23, 0x00, 0x20, 0x04, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00,
   0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x30, 0x02, 0x00, 0x00,
   0x00, 0x00, 0x46, 0x00, 0x10, 0x03, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00,
   0x18, 0x01, 0x00, 0xf8, 0xff, 0x1f, 0xc4, 0x00, 0x88, 0x01, 0xfe, 0x0f,
   0x00, 0x70, 0x84, 0x00, 0x88, 0xc0, 0x03, 0x00, 0x00, 0xc0, 0x85, 0x00,
   0x8c, 0x70, 0x00, 0xff, 0xff, 0x00, 0x8f, 0x01, 0xc4, 0x1e, 0xe0, 0x01,
   0x80, 0x7f, 0x18, 0x01, 0xc4, 0x01, 0x1e, 0x00, 0x00, 0xc0, 0x2b, 0x01,
   0x64, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x4a, 0x01, 0x56, 0x7f, 0x00, 0x00,
   0x00, 0x00, 0x88, 0x02, 0xca, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x07,
   0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x04, 0x02, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x06, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03,
   0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x0f, 0x00, 0x00,
   0x00, 0x00, 0x1e, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00,
   0x00, 0x80, 0x07, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01,
   0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x1f, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

// constants won't change. They're used here to set pin numbers:
const int BUTTON_PIN = 4; // the number of the pushbutton pin
const int SHORT_PRESS_TIME = 1000; // 1000 milliseconds
const int LONG_PRESS_TIME  = 1000; // 1000 milliseconds

// Variables will change:
int lastState = LOW;  // the previous state from the input pin
bool currentState;     // the current reading from the input pin
unsigned long pressedTime  = 0;
unsigned long releasedTime = 0;
bool isPressing = false;
bool isLongDetected = false;
bool isShortDetected = false;
bool action = false;
int Screen=0; //Screen 0 StartSplashScherm Screen1 15Min Start SetScherm Screen2 ZandloperScherm met de tijdsaanduiding
int SetT=1;  //10Minuten
int SetE=5;  //5Minuten
bool SelectStart=true;
bool SelectSetT=false;
bool SelectSetE=false;
bool Changed=false;
int Selected1 = 1; //(1 Start, 2 Tientallen; 3 Eenheden Scherm1)
int Selected2 = 0; //(0 scherm1 actief, 1 scherm1 actief, 2 reset time, 3 stop tijd enterug naar scherm 1

//Tilt switch.
const int tilt = 5; //tiltSwitch to Nano Every pin D5 Flipmode detectie
int TiltState = 1;
int lastTiltState = 1;
bool actionTilt = false;

//Timer
unsigned long TimerStart = 0;
unsigned long TimerTijd=0;
unsigned long TimerEnd=0;
bool TimerStarted = false;
int TimeMin=0; //if Min<10 remember add 0 before print if 0 print 00
int TimeSec=0;  //if Sec<10 remember add 0 before print if 0 print 00 till 59
unsigned long TimerLooptNog=0;
String LeadTimeSec="";
String LeadTimeMin="";

//Buzzer
const int buzzer = 3; //buzzer to Nano Every pin D3

void draw(void) {
 // graphic commands to redraw the complete screen should be placed here  
 u8g2.drawXBM( 0, 0, zand_width, zand_height, zand_bits);
}

void setup() {
  // put your setup code here, to run once:
  u8g2.begin();
  u8g2.enableUTF8Print();    // enable UTF8 support for the Arduino print() function
  u8g2.setFont(u8g2_font_unifont_t_chinese2);
  u8g2.setDisplayRotation(U8G2_R1);//u8g2.setFlipMode (1);
  u8g2.firstPage();
  do {
    draw();
  } while( u8g2.nextPage() );
  Serial.begin(9600);
  pinMode(buzzer, OUTPUT); // Set buzzer - pin 9 as an output
  pinMode(BUTTON_PIN, INPUT_PULLUP);
  pinMode(tilt, INPUT_PULLUP);
  CheckButton();
  isShortDetected = false;
  isLongDetected = false;   //Faulty first read bypassing dirty way.
  delay(2500);
  u8g2.setDisplayRotation(U8G2_R3);//u8g2.setFlipMode (0);  //u8g2_t u8g2,
  u8g2.firstPage();
  do {
    draw();
  } while( u8g2.nextPage() );
  CheckButton();
  isShortDetected = false;  //Faulty first read bypassing dirty way.
  isLongDetected = false;
  delay(2500);
  Serial.println("Zandloper");
  Serial.println((String)SetT+SetE+"Min");
  Serial.println("Start");
  Screen=Screen+1;
    u8g2.firstPage();
  do {
    Screen1();
  } while( u8g2.nextPage() );
  
}

void loop() {
  // put your main code here, to run repeatedly:
  CheckTilt();
  CheckButton();
  // SHORT Pressed Button
  if (isShortDetected == true && Selected1 == 1 && SelectSetT == false && SelectSetE == false && Screen == 1 && action == true){  //isPressing = false){  //van Start naar SetT
    Selected1 = 2;
    action=false;//isShortDetected = false;
    Serial.println("SetT van Start");
    ScreenSetT();
  }
  else if (isShortDetected == true && Selected1 == 2 && SelectSetT == false && SelectSetE == false && Screen == 1 && action == true){  //){  //van SetT naar SetE
    Selected1 = 3;
    action=false;//isShortDetected = false;
    Serial.println("SetE van SetT");
    ScreenSetE();
  }
  else if (isShortDetected == true && Selected1 == 3 && SelectSetT == false && SelectSetE == false && Screen == 1 && action == true){  //){  //van SetE naar Start
    Selected1 = 1;
    action=false;//isShortDetected = false;
    Serial.println("Start van SetT");
    Screen1();
  }
  else if (isShortDetected == true && SelectSetT == true && Screen == 1 && action == true){  //){  //SetT ++
    if (SetT<9){
      SetT=SetT+1;
    }
    else {
      SetT=0;
    }
    Serial.println((String)SetT+SetE+"Min");
    Serial.println("Start");
    action=false;//isShortDetected = false; //Pas bij lang indrukken aanpassen naar false.
    ScreenSetT();
  }
  else if (isShortDetected == true && SelectSetE == true && Screen == 1 && action == true){  //){  //SetE ++
    if (SetE<9){
      SetE=SetE+1;
    }
    else {
      SetE=0;
    }
    Serial.println((String)SetT+SetE+"Min");
    Serial.println("Start");
    action=false;//isShortDetected = false;
    ScreenSetE();
  }
// LONG Pressed Button
  if (isLongDetected == true && Selected1 == 1 && Screen == 1 && action == true){  //){ //Start gekozen wissel scherm en start teller
    Screen = 2;
    Selected1=0;
    Selected2=1;
    TimerStarted = true;
    TimerStart=millis();
//    delay(0);
    TimerEnd=((SetT*10+SetE)*60);  //EindTijd, Tijd te gaan is EindTijd - millis()  //TimerStart+(((SetT*10)+SetE)*1000*60)
    TimerEnd=TimerEnd*1000;
    TimerEnd=TimerStart+TimerEnd;
    action=false;//isLongDetected = false;
    Serial.println("Start selected");
  }
  else if (isLongDetected == true && Selected1 == 2 && Screen == 1 && action == true){  //){  //SetT Gekozen of vastleggen keuze
    SelectSetT = !SelectSetT;
    action=false;//isLongDetected = false;
    Serial.println("SetT selected");
    ScreenSetT();
  }
  else if (isLongDetected == true && Selected1 == 3 && Screen == 1 && action == true){  //){  //SetE Gekozen of vastleggen keuze
    SelectSetE = !SelectSetE;
    action=false;//isLongDetected = false;
    Serial.println("SetE selected");
    ScreenSetE();
  }
//Screen2
  else if (isShortDetected == true && Screen == 2 && action == true){  //){  //In Scherm2 Zandloper Kort gedrukt Niks/StopAlarm
//    Selected1 = 2;
    action=false;//isShortDetected = false;
    Serial.println("ZandLoper Kort");
  }
  else if (isLongDetected == true && Screen == 2 && action == true){  //){  //Scherm2 Lang gedrukt Stop Tijd en terug naar Start instel scherm.
    Screen = 1;
    Selected1 = 1;
    TimerStarted = false;
    action=false;//isLongDetected = false;
    CheckTilt();
    Screen1();
    Serial.println("ZandLoper Lang terug naar Start scherm");
  }
  else if (Screen == 2 && TimerStarted == true){
//    PlayTune();
    CheckTilt();
    ScreenTime();
  }
  else if (Screen == 2 && TimerStarted==false && actionTilt==true){
    //Restart timer
    ScreenTime();
    actionTilt=false;
  }
//  CheckTilt();
}

void CheckTilt(){
  TiltState = digitalRead(tilt);
  if (TiltState != lastTiltState) {
    if (TiltState == HIGH){
      Serial.println("NormaalScherm");  //u8g2.setFlipMode (TiltState);
//      u8g2(u8g2_R0);
      if (Screen==1){
        u8g2.setDisplayRotation(U8G2_R3);
        u8g2.setFlipMode(0);
      }
      else {
        u8g2.setDisplayRotation(U8G2_R3);
      }
//      u8g2.sendBuffer();
    }
    else {
      Serial.println("TurnScreen");
      if (Screen==1){
        u8g2.setFlipMode (1);
        u8g2.setDisplayRotation(U8G2_R3);
      }
      else {
        u8g2.setDisplayRotation(U8G2_R1);
      }
//      u8g2.sendBuffer();
    }
//    if (
  u8g2.sendBuffer();
  actionTilt = true;
//    delay(50);
  }
  lastTiltState=TiltState;
}



void PlayTune(){
  // put your main code here, to run repeatedly:
  tone(buzzer, 349.23,500); // FA
  delay(500);        // ...for 1 sec
  tone(buzzer, 261.63,1000); // Do
  delay(1000);
  tone(buzzer, 261.63,500); // Do
  delay(500);
  tone(buzzer, 277.18,500); // Re#
  delay(500);
  tone(buzzer, 277.18,250); // Re#
  delay(250);
  tone(buzzer, 311.13,250); // Fa#
  delay(250);
  tone(buzzer, 277.18,500); // Re
  delay(500);
  tone(buzzer, 261.63,1000); // Do
  delay(2000);
  noTone(buzzer);     // Stop sound...
}
